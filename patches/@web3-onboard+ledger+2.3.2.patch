diff --git a/node_modules/@web3-onboard/ledger/dist/index.js b/node_modules/@web3-onboard/ledger/dist/index.js
index 12bf9df..a1b84d3 100644
--- a/node_modules/@web3-onboard/ledger/dist/index.js
+++ b/node_modules/@web3-onboard/ledger/dist/index.js
@@ -2,6 +2,8 @@
 import { TypedDataUtils } from '@metamask/eth-sig-util';
 const LEDGER_LIVE_PATH = `m/44'/60'`;
 const LEDGER_DEFAULT_PATH = `m/44'/60'/0'`;
+const ROOTSTOCK = `m/44'/137'/0'/0'`;
+const ROOTSTOCK_TEST = `m/44'/37310'/0'/0'`;
 const DEFAULT_BASE_PATHS = [
     {
         label: 'Ledger Live',
@@ -10,11 +12,19 @@ const DEFAULT_BASE_PATHS = [
     {
         label: 'Ledger Legacy',
         value: LEDGER_DEFAULT_PATH
+    },
+    {
+        label: 'Rootstock Path',
+        value: ROOTSTOCK
+    },
+    {
+        label: 'Rootstock Testnet Path',
+        value: ROOTSTOCK_TEST
     }
 ];
 const assets = [
     {
-        label: 'ETH'
+        label: 'RBTC'
     }
 ];
 const supportsWebUSB = () => Promise.resolve(!!navigator &&
@@ -31,7 +41,9 @@ const getAccount = async (derivationPath, asset, index, provider, eth) => {
     const dPath = derivationPath === LEDGER_LIVE_PATH
         ? `${derivationPath}/${index}'/0/0`
         : `${derivationPath}/${index}`;
-    const { address } = await eth.getAddress(dPath);
+    let { address } = await eth.getAddress(dPath);
+    //Matching rootstock checksum
+    address = address.toLowerCase();
     return {
         derivationPath: dPath,
         address,
@@ -95,7 +107,9 @@ function ledger({ customNetwork, filter } = {}) {
                         // Checks to see if this is a custom derivation path
                         // If it is then just return the single account
                         if (derivationPath !== LEDGER_LIVE_PATH &&
-                            derivationPath !== LEDGER_DEFAULT_PATH) {
+                            derivationPath !== LEDGER_DEFAULT_PATH &&
+                            derivationPath !== ROOTSTOCK &&
+                            derivationPath !== ROOTSTOCK_TEST) {
                             const { address } = await eth.getAddress(derivationPath);
                             return [
                                 {
